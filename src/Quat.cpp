/*
 * Native class adapter template for 'glm.Quat'.
 * WARNING: remember to copy this file to your project dir before you begin to change it.
 * Generated by the Coral Compiler v0.6.0 on Tue May 24 17:13:16 2011.
 */

#include "Quat_Adapter.h"

namespace eigen {

void Quat_Adapter::getAngleAxis( eigen::Quat& instance, double& degrees, eigen::Vec3& axis )
{

}

double Quat_Adapter::getW( eigen::Quat& instance )
{
	return 0;
}

void Quat_Adapter::setW( eigen::Quat& instance, double w )
{

}

double Quat_Adapter::getX( eigen::Quat& instance )
{
	return 0;
}

void Quat_Adapter::setX( eigen::Quat& instance, double x )
{

}

double Quat_Adapter::getY( eigen::Quat& instance )
{
	return 0;
}

void Quat_Adapter::setY( eigen::Quat& instance, double y )
{

}

double Quat_Adapter::getZ( eigen::Quat& instance )
{
	return 0;
}

void Quat_Adapter::setZ( eigen::Quat& instance, double z )
{

}

void Quat_Adapter::conjugate( eigen::Quat& instance )
{

}

void Quat_Adapter::copy( eigen::Quat& instance, const eigen::Quat& q )
{

}

void Quat_Adapter::cross( eigen::Quat& instance, const eigen::Quat& q )
{

}

double Quat_Adapter::dot( eigen::Quat& instance, const eigen::Quat& q )
{

}

void Quat_Adapter::fromMat4( eigen::Quat& instance, const eigen::Mat4& m )
{

}

void Quat_Adapter::getXYZW( eigen::Quat& instance, double& x, double& y, double& z, double& w )
{

}

void Quat_Adapter::inverse( eigen::Quat& instance )
{

}

void Quat_Adapter::mix( eigen::Quat& instance, const eigen::Quat& q, double factor )
{

}

void Quat_Adapter::mul( eigen::Quat& instance, const eigen::Quat& q )
{

}
	
void Quat_Adapter::rotate( eigen::Quat& instance, double degrees, const eigen::Vec3& axis )
{

}

void Quat_Adapter::rotationFromTo( eigen::Quat& instance, const eigen::Vec3& from, const eigen::Vec3& to  )
{
	
}

void Quat_Adapter::setXYZW( eigen::Quat& instance, double x, double y, double z, double w )
{

}

} // namespace eigen
