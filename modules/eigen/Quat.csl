native class Quat
{
	<c++
		#include <Eigen/Dense>
		inline bool operator ==( const Eigen::Quaterniond& a, const Eigen::Quaterniond& b )
		{
			return true;
		}
		namespace eigen { typedef Eigen::Quaterniond Quat; } 
	c++>
	double w;
	double x;
	double y;
	double z;

	void setWXYZ( in double w, in double x, in double y, in double z );
	void getWXYZ( out double w, out double x, out double y, out double z );
	void getAngleAxis( out double degrees, out Vec3 axis );

	void conjugate();
	void cross( in Quat q );
	double dot( in Quat q );
	void inverse();
	void mix( in Quat q, in double factor );
	void mul( in Quat q );
	void rotate( in double degrees, in Vec3 axis );
	void rotationFromTo( in Vec3 from, in Vec3 to );

	void copy( in Quat q );
	void fromMat4( in Mat4 m );
};
